<?xml version='1.1' encoding='UTF-8'?>
<com.amdocs.hudson.plugins.flow.FlowProject plugin="flow@16.3">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@2.0.1">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>10</maxConcurrentPerNode>
      <maxConcurrentTotal>10</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.5"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>StartingStep</name>
          <description>The flow will start from the specified step</description>
          <choices>
            <string>BUILD</string>
            <string>PACKAGING</string>
            <string>INSTALLATION</string>
            <string>SANITY</string>
            <string>MAT</string>
            <string>DOWNSTREAM</string>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>RunningMode</name>
          <description>The flow will start in the specified mode</description>
          <choices>
            <string>NORMAL</string>
            <string>DAILY</string>
            <string>WEEKLY</string>
            <string>DAILY_AND_WEEKLY</string>
            <string>MONTHLY</string>
            <string>DAILY_AND_MONTHLY</string>
            <string>WEEKLY_AND_MONTHLY</string>
            <string>ALL</string>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>FlowController</name>
          <description></description>
          <allowedSlaves>
            <string>master</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>master</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>AcronisEngine</name>
          <description></description>
          <allowedSlaves>
            <string>master</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>master</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BaseImage</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>SimulatorEngine</name>
          <description></description>
          <allowedSlaves>
            <string>ALL (no restriction)</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>SCM-SIM7050-01</string>
          </defaultSlaves>
          <triggerIfResult>allowMultiSelectionForConcurrentBuilds</triggerIfResult>
          <allowMultiNodeSelection>true</allowMultiNodeSelection>
          <triggerConcurrentBuilds>true</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_VERSION</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Auto_Deploy_Sanity</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BaseImagePath</name>
          <description></description>
          <defaultValue>D:\BaseImage</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@2.1">
          <name>MajorMinor_Ver</name>
          <description></description>
          <randomName>choice-parameter-313186242246989</randomName>
          <visibleItemCount>0</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.44">
              <script>String major_min=BUILD_VERSION.substring(0,BUILD_VERSION.indexOf(&quot;.&quot;,3))
return &quot;&lt;input name=\&quot;value\&quot; value=\&quot;${major_min}\&quot; class=\&quot;setting-input\&quot; type=\&quot;text\&quot;&gt;&quot;</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.44">
              <script>String major_min=BUILD_VERSION.substring(0,BUILD_VERSION.indexOf(&quot;.&quot;,3))
return &quot;&lt;input name=\&quot;value\&quot; value=\&quot;${major_min}\&quot; class=\&quot;setting-input\&quot; type=\&quot;text\&quot;&gt;&quot;</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>SilentInstallation</projectName>
          <parameters class="linked-hash-map">
            <entry>
              <string>BUILD_VERSION</string>
              <string></string>
            </entry>
          </parameters>
          <referencedParameters>BUILD_VERSION</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILDTYPE</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Tasks</string>
              <string>Formal</string>
              <string>Scheduled</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>ToolType</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Archer700</string>
              <string>Archer600</string>
              <string>Archer TL</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CheckSimTimeout</name>
          <description>(min)</description>
          <defaultValue>180</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>ATEControllerEngine</name>
          <description></description>
          <allowedSlaves>
            <string>SCM-ATE-01</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>SCM-ATE-01</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TestSuite</name>
          <description>Full file name, XXXXX.csv</description>
          <defaultValue>AROL_Autorun_ATE_Suite</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TestSuitePath</name>
          <description>Start with X:</description>
          <defaultValue>X:\ATE\TestCases\SQC\MBS\AROL</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ATEBasePath</name>
          <description></description>
          <defaultValue>\\isr1vmappcm01\Automated_Testing\17.0x_ATE</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_ID</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SCRIPT_NUMBER</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>product</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RunNunitTests</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders/>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.4.1">
      <script plugin="script-security@1.44">
        <script>import hudson.model.*
def build = Thread.currentThread().executable
def buildversion= build.getEnvVars().get(&quot;BUILD_VERSION&quot;)
def tooltype= build.getEnvVars().get(&quot;ToolType&quot;)
def suite=build.getEnvVars().get(&quot;TestSuite&quot;)
def simulator=build.getEnvVars().get(&quot;SimulatorEngine&quot;)
def resulthtml= new File(&apos;C:\\Temp\\TestResult_&apos;+buildversion+&apos;_&apos;+tooltype+&apos;_&apos;+suite+&apos;.html&apos;)
def resultNunitHtml= new File(&apos;C:\\Temp\\NunitTestResult_&apos;+buildversion+&apos;_&apos;+tooltype+&apos;_&apos;+suite+&apos;.html&apos;)

if(build.result.toString()==&quot;SUCCESS&quot;) resulthtml.write &apos;&lt;tr&gt;&lt;td&gt;&lt;b&gt;&lt;font color=\&quot;green\&quot;&gt;&apos;+ build.result.toString() +&apos;   for&apos; +&apos; &apos;+tooltype +&apos;&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&apos;
else resulthtml.write &apos;&lt;tr&gt;&lt;td&gt;&lt;b&gt;&lt;font color=\&quot;red\&quot;&gt;&apos;+ build.result.toString() +&apos;   for&apos; +&apos; &apos;+tooltype +&apos;&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&apos;

Map&lt;hudson.model.Build, List&lt;hudson.model.Action&gt;&gt; buildsToNUnit=new HashMap&lt;hudson.model.Build, List&lt;hudson.model.Action&gt;&gt;();
def historyJobs=build.getJobExecutionHistory()

historyJobs.getFlowSteps().each { step -&gt;
	java.util.LinkedList buildsToDisplay=new java.util.LinkedList();
	if (historyJobs.getJobsNumberInStep(step) != 0){
		historyJobs.getJobsInStep(step).each { flowRecord -&gt;
			def project = hudson.model.Hudson.instance.getItemByFullName(flowRecord.getJobName())
			//if (flowRecord.getBuildNumber() != manager.build.number)
			//	return;
			def theBuild = project.getBuildByNumber(flowRecord.getBuildNumber())
			if (flowRecord.getStatus().toString()==&quot;CANCELED&quot;)
				return;
			if (flowRecord.getStatus().toString()==&quot;SKIPPED&quot;)
				return;
			if (flowRecord.getStatus().toString()==&quot;DISABLED&quot;)
				return;
			if (flowRecord.getStatus().toString()==&quot;P.E.S&quot;)
				return;
			//Job is a matrix build.  Display the indivdual MatrixRuns instead of the parent job
			if (theBuild.getClass().getName().equals(&apos;hudson.matrix.MatrixBuild&apos;)){
				buildsToDisplay.addAll(theBuild.getExactRuns())
			}else{
				buildsToDisplay.add(theBuild)
			}
	  
			//Nunit Analysis - collect data code : start
			def action = theBuild.getAction(hudson.tasks.test.AbstractTestResultAction.class);
			if (action != null){
                              //  manager.listener.logger.println(&quot;Adding job:&quot;+flowRecord.getJobName())
				buildsToNUnit.put(theBuild,action)
			}
			//Nunit Analysis - collect data code : end
			
		resulthtml &lt;&lt; &quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;http://scm-builds-08:8080/&quot;+build.url+&quot;\&quot;&gt;&quot;+ flowRecord.getJobName()+&quot;&lt;/td&gt;&quot;
		resulthtml &lt;&lt; &quot;&lt;td&gt;&quot; + flowRecord.getStatus().toString() +&quot;&lt;/td&gt;&quot;
		resulthtml &lt;&lt; &quot;&lt;td&gt;     &quot; + theBuild.getDurationString()+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;
		
		}

	}
}
	def rooturl=manager.hudson.rootUrl
        def nunitTestType=&quot;&quot;
	buildsToNUnit.each{
           manager.listener.logger.println(&quot;${it} -${it.value}&quot;)
           //String str=it.key.getDisplayName()
               nunitTestType=it.key.toString().contains(&quot;Cold&quot;)?&quot;C&quot;:&quot;H&quot;
                //manager.listener.logger.println(&quot;${it.key}&quot;)
		resultNunitHtml &lt;&lt; &quot;&lt;BR/&gt;&quot;
		resultNunitHtml &lt;&lt; &quot; &lt;table&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;tr&gt;&quot;
                resultNunitHtml &lt;&lt; &quot;&lt;th&gt;&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;th&gt;Name&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;th&gt;Result&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;th&gt;Total&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;th&gt;Failed&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;th&gt;Skipped&lt;/th&gt;&quot;
		resultNunitHtml &lt;&lt; &quot;&lt;/tr&gt;&quot;
		for (action in it.value){
		  resultNunitHtml &lt;&lt; &quot;&lt;tr&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;img src=&apos;${rooturl}/images/16x16/warning.gif&apos;/&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;/td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;a href=&apos;${rooturl}${it.key.url}/${action.urlName}&apos;&gt;${nunitTestType}Nunit for &apos;${tooltype}&apos;&lt;/a&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;/td&gt;      &lt;td class=&apos;center&apos;&gt;&quot;

		  if (action.getFailCount()==0){
				resultNunitHtml &lt;&lt; &quot;&lt;img src=&apos;${rooturl}static/e59dfe28/images/16x16/blue.gif&apos; /&gt;&quot;
		  }else {
			  if (action.getFailCount()&gt;0){
				 resultNunitHtml &lt;&lt; &quot;&lt;img src=&apos;${rooturl}static/e59dfe28/images/16x16/red.gif&apos; /&gt;&quot;
			   }else { 
				  resultNunitHtml &lt;&lt; &quot;&lt;img src=&apos;${rooturl}static/e59dfe28/images/16x16/yellow.gif&apos; /&gt;&quot;
			   }
		  }
		  resultNunitHtml &lt;&lt; &quot;&lt;/td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;td class=\&quot;center\&quot;&gt;${action.getTotalCount()} &lt;/td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;td class=\&quot;center\&quot;&gt;${action.getFailCount()} &lt;/td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;td class=\&quot;center\&quot;&gt;${action.getSkipCount()} &lt;/td&gt;&quot;
		  resultNunitHtml &lt;&lt; &quot;&lt;/tr&gt;&quot;
		}
		resultNunitHtml &lt;&lt; &quot;&lt;/table&gt;&quot;
	}


























</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>UnlockSimulator</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.10"/>
  </buildWrappers>
  <flowDefinitionId>-1</flowDefinitionId>
  <globalEnvVars>
    <entry>
      <string>ATEBasePath</string>
      <string></string>
    </entry>
    <entry>
      <string>SCRIPT_NUMBER</string>
      <string></string>
    </entry>
    <entry>
      <string>MajorMinor_Ver</string>
      <string></string>
    </entry>
    <entry>
      <string>product</string>
      <string></string>
    </entry>
    <entry>
      <string>TestSuite</string>
      <string></string>
    </entry>
    <entry>
      <string>AcronisEngine</string>
      <string></string>
    </entry>
    <entry>
      <string>BaseImagePath</string>
      <string></string>
    </entry>
    <entry>
      <string>TEST_ID</string>
      <string></string>
    </entry>
    <entry>
      <string>TestSuitePath</string>
      <string></string>
    </entry>
    <entry>
      <string>BUILDTYPE</string>
      <string></string>
    </entry>
    <entry>
      <string>BaseImage</string>
      <string></string>
    </entry>
    <entry>
      <string>ATEControllerEngine</string>
      <string></string>
    </entry>
  </globalEnvVars>
  <profiler class="com.amdocs.hudson.plugins.dbprofiler.DBProfiler"/>
  <jobParameterList class="java.util.concurrent.CopyOnWriteArrayList">
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>SetFlowController</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>BUILD</step>
      <appServerType></appServerType>
      <platform></platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>RestorageImage</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>INSTALLATION</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>SimLockCheck</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>SilentInstallation</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>INSTALLATION</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>RestorageImage</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>SimLockCheck</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>INSTALLATION</step>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>ATARS_SanityTest</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>SANITY</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>RunNunitColdIntegTests</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>RunNunitColdIntegTests</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>true</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>INSTALLATION</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>PrepareSUT</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>RunNunitHotIntegTests</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>SANITY</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>ATARS_SanityTest</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Tomcat</appServerType>
      <platform>Windows</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
    <com.amdocs.hudson.plugins.flow.JobParameter>
      <jobName>PrepareSUT</jobName>
      <continueJobIfUnstable>false</continueJobIfUnstable>
      <continueJobIfAborted>false</continueJobIfAborted>
      <continueJobAnyway>false</continueJobAnyway>
      <overrideJobNode>false</overrideJobNode>
      <specifyModule>false</specifyModule>
      <step>INSTALLATION</step>
      <dependencyJobList class="java.util.concurrent.CopyOnWriteArrayList">
        <com.amdocs.hudson.plugins.flow.DependencyJob>
          <dependencyJobName>SilentInstallation</dependencyJobName>
        </com.amdocs.hudson.plugins.flow.DependencyJob>
      </dependencyJobList>
      <appServerType>Same as parent</appServerType>
      <platform>Same as parent</platform>
      <triggersFlag>false</triggersFlag>
      <triggers>
        <dailyTriggerFlag>false</dailyTriggerFlag>
        <weeklyTriggerFlag>false</weeklyTriggerFlag>
        <monthlyTriggerFlag>false</monthlyTriggerFlag>
      </triggers>
    </com.amdocs.hudson.plugins.flow.JobParameter>
  </jobParameterList>
  <createNodesDef/>
  <allowConcurrentFlow>true</allowConcurrentFlow>
  <concurrentFlowCanStartAfterStep>BUILD</concurrentFlowCanStartAfterStep>
  <allowDeleteProjects>true</allowDeleteProjects>
  <preventFromExecutingJobs>false</preventFromExecutingJobs>
  <executeConcurrentFlowAnyway>true</executeConcurrentFlowAnyway>
  <shareParameters>true</shareParameters>
  <smartRebuild>false</smartRebuild>
  <rebuildFromFailuresWithoutParam>false</rebuildFromFailuresWithoutParam>
  <mode>ALL</mode>
  <showHide>HIDE</showHide>
</com.amdocs.hudson.plugins.flow.FlowProject>