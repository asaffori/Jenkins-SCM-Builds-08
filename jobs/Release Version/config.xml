<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.23">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.1">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>ATLCustomer</string>
        <string>Version</string>
        <string>A700Web</string>
        <string>ATLWeb</string>
        <string>Comments</string>
        <string>A700Customer</string>
        <string>A700</string>
        <string>ATL</string>
        <string>A600Web</string>
        <string>A600</string>
        <string>Comments on Phoenix installation:</string>
        <string>A600Customer</string>
      </parameters>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Version</name>
          <description>Which Version you want to release?</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>A600</name>
          <description>Released For Tool Type</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>A700</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>ATL</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>Comments</name>
          <description>What is your comments?</description>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>A600Web</name>
          <description>Which Version will be publish on Web?</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>A700Web</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>ATLWeb</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>A600Customer</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>A700Customer</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ATLCustomer</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>Comments on Phoenix installation:</name>
          <description>Input your comments regarding the Phoenix installation:</description>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@2.0.1">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
    <script>import groovy.io.FileType

pipeline {
    agent any
    parameters {
        string(name: &apos;Version&apos;, description: &apos;Which Version you want to release?&apos;)
        booleanParam(name: &apos;A600&apos;, defaultValue: false, description: &apos;Released For Tool Type&apos;)
        booleanParam(name: &apos;A700&apos;, defaultValue: false)
        booleanParam(name: &apos;ATL&apos;, defaultValue: false)
        text(name: &apos;Comments&apos;, description: &apos;What is your comments?&apos;)
		booleanParam(name: &apos;A600Web&apos;, defaultValue: false, description: &apos;Which Version will be publish on Web?&apos;)
        booleanParam(name: &apos;A700Web&apos;, defaultValue: false)
        booleanParam(name: &apos;ATLWeb&apos;, defaultValue: false)
        string(name: &apos;A600Customer&apos;)
        string(name: &apos;A700Customer&apos;)
        string(name: &apos;ATLCustomer&apos;) 
        text(name: &apos;Comments on Phoenix installation:&apos;, description: &apos;Input your comments regarding the Phoenix installation:&apos;)

    }
	stages {
	    
	    stage (&apos;validation&apos;) {
            steps (&apos;vaiidate&apos;) {
	                script{
	                if(params.Version==&quot;&quot;){
    				    exitwitherror(&quot;Version is not defined&quot;)
	                }
	                if(params.A600==false&amp;&amp;params.A700==false&amp;&amp;params.ATL==false){
    				    exitwitherror(&quot;Released tool type is empty, at least you are releasing for one tool type&quot;)
                    }
                }
            }
	    }
	  
        stage (&apos;Process Parameter&apos;) {
		    steps (&apos;Parameter&apos;){
		        script {
		            shortversion=params.Version.substring(6,8)==&apos;00&apos;?Version.substring(0,6):params.Version.substring(0,8)
					majorminor=params.Version.substring(0,5)
					
					//get compitable RDM version
					def RDMVersion
					File RDMFolder =new File(&quot;\\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V&quot;+shortversion+&quot;\\RDM&quot;)
					if(!RDMFolder.exists())exitwitherror(&quot;RDM kit folder doesn&apos;t exist&quot;)
					File[] RDMFolderContent=RDMFolder.listFiles()
					RDMFolderContent.each{
					    RDMVersion=it.getName().substring(4,18)
					}
					if(RDMVersion==&quot;&quot;)exitwitherror(&quot;RDM Version is not defined&quot;)
                   
                    
		            tooltype=(params.A600?&quot; A600&quot;:&quot;&quot;)+(params.A700?&quot; A700&quot;:&quot;&quot;)+(params.ATL?&quot; ATL&quot;:&quot;&quot;) 
		            
					toolSRN=&quot;&lt;/br&gt;&quot;
                    File DocFolder =new File(&quot;\\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V&quot;+shortversion+&quot;\\Tool\\ArcherSWInsKIT_&quot;+params.Version+&quot;\\Documentation&quot;)
					if(!DocFolder.exist())exitwitherror(&quot;Archer kit document folder doesn&apos;t exist&quot;)
					File[] DocContent=DocFolder.listFiles()
					DocContent.each{
					    if(it.getName().contains(&apos;SRN&apos;)){
					        toolSRN+=it.getName()
					    }
					}
                    echo SRN
					
					if(params.Comments==null)params.Comments=&quot;&lt;/br&gt;&quot;
					
		            A600webtext=(params.A600Web?&quot; A600: Will be published on Web.&lt;/br&gt;&quot;:&quot;A600: No Web publish.&lt;/br&gt;&quot;)
		            A700webtext=(params.A700Web?&quot; A700: Will be published on Web.&lt;/br&gt;&quot;:&quot;A700: No Web publish.&lt;/br&gt;&quot;)
		            ATLwebtext=(params.ATLWeb?&quot; ATL: Will be published on Web.&lt;/br&gt;&quot;:&quot;ATL: No Web publish.&lt;/br&gt;&quot;)
		            
		            publishweb=(params.A600?A600webtext:&quot;&quot;)+(params.A700?A700webtext:&quot;&quot;)+(params.ATL?ATLwebtext:&quot;&quot;) 
		            echo publishweb
		            
					if(params.A600Customer==&quot;&quot;)A600Customer==&quot;N/A&quot;
					if(params.A700Customer==&quot;&quot;)A700Customer==&quot;N/A&quot;
					if(params.ATLCustomer==&quot;&quot;)ATLCustomer==&quot;N/A&quot;
					customer=(params.A600?&quot;A600:&quot;+A600Customer+&quot;&lt;/br&gt;&quot;:&quot;&quot;)+(params.A700?&quot;A700:&quot;+A700Customer+&quot;&lt;/br&gt;&quot;:&quot;&quot;)+(params.ATL?&quot;ATL:&quot;+ATLCustomer+&quot;&lt;/br&gt;&quot;:&quot;&quot;) 
					mailgroup=(params.A600?&quot;Agnes.Zhang@kla-tencor.com;&quot;:&quot;&quot;)+(params.A700?&quot;Adham.Saffori@kla-tencor.com;&quot;:&quot;&quot;)
					
					string masterimage=&quot;&lt;/br&gt;&quot;
					if(params.A600)	masterimage+=new File(&quot;\\\\klasj\\ktfiles\\Regions\\Israel\\SWGRP\\OMDSWImages3\\A600.txt&quot;).text+&quot;&lt;/br&gt;&quot;
					if(params.A700)	masterimage+=new File(&quot;\\\\klasj\\ktfiles\\Regions\\Israel\\SWGRP\\OMDSWImages3\\A700.txt&quot;).text+&quot;&lt;/br&gt;&quot;
					if(params.ATL)	masterimage+=new File(&quot;\\\\klasj\\ktfiles\\Regions\\Israel\\SWGRP\\OMDSWImages3\\ATL.txt&quot;).text+&quot;&lt;/br&gt;&quot;
					
					def buildnotice= &quot;\\\\isr1appcc02\\Views\\OMD\\OMD-UN_&quot;+majorminor+&quot;\\UOMD_BLD_&quot;+params.Version+&quot;_code&quot;+ &quot;/OMD_Builds/JenkinsBuild/Instructions/InstallationInstruction.html&quot;;
	                def buildnoticefile = new File(buildnotice)
					if(buildnoticefile.exists()){
                		string phoenixversion=&quot;SW &quot;+shortversion+&quot; requires upgrade of the Handler SW to Phoenix SWV V&quot;
                		echo &quot;found the buildnotice file&quot;				
                		builtnoticecontent=buildnoticefile.readLines()
                		for(String line : builtnoticecontent){
                			if(line.contains(&quot;&gt;Phoenix&lt;&quot;)){
                			 string subline=line.substring(line.indexOf(&quot;&lt;TD&gt;&quot;)+4,line.length()-5)
                			 phoenixversion+=subline
                
                			continue
                			}
                		  }
                	}
					
		            def thirdpartyism= &quot;\\\\isr1appcc02\\Views\\OMD\\OMD-UN_&quot;+majorminor+&quot;\\UOMD_BLD_&quot;+params.Version+&quot;_code&quot;+ &quot;/Installation/Archer_Family/Installshield/Archer_SW_Installation/uArcherThirdPartyInstallation/ThirdPartySetup.ism&quot;;
	                def thirdparty
	                thirdparty= new File(thirdpartyism)
					
                	if(thirdparty.exists()){
                		string thirdpartyversion=&quot;&lt;table&gt;&quot;
                		echo &quot;found the third party ism file&quot;				
                		thirdpartycontent=thirdparty.readLines()
                		for(String line : thirdpartycontent){
                			if(line.contains(&quot;PATH_TO_ARCHER_INSTALLATION&amp;gt;\\SupportFiles&quot;)||line.contains(&quot;PATH_TO_ARCHER_INSTALLATION&amp;gt;\\&amp;lt;ARCHER_VER2&amp;gt;\\SupportFiles&quot;)){
                			if(line.contains(&quot;Disk&quot;))continue
                			 string subline=line.substring(line.indexOf(&quot;SupportFiles\\&quot;)+13,line.length()-16).replaceAll(&quot;\\\\&quot;,&quot;&lt;//TD&gt;&lt;TD&gt;&quot;)
                			 thirdpartyversion+=&quot;&lt;TR&gt;&lt;TD&gt;&quot;+subline+&quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
                            echo subline
                			continue
                			}
                		  }
                		 string thirdpartyversion+=&quot;&lt;//table&gt;&quot;
                	}
		            
		            echo thirdpartyversion
		            mailcontent=&quot;Archer SWV  ${shortversion}(${params.Version}) is released for ${tooltype}&lt;/br&gt;&quot;+
                    &quot;${params.Comments}&lt;/br&gt;&quot;+
                    &quot;&lt;strong&gt;&lt;u&gt;Tool SW&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
                    &quot;SWV ${params.Version} Installation kit is available in \\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V${shortversion}\\Tool\\ArcherSWInsKIT_${params.Version}&lt;/br&gt;&quot;+
					&quot;Installation instructions are residing in Documentation folder&lt;/br&gt;&quot;+
                    &quot;${SRN} is residing in Documentation folder.&lt;/br&gt;&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Compatible RDM SW&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;RDM ${shortversion} is available at \\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V${shortversion}\\RDM\\RDM_${RDMVersion}&lt;/br&gt;&quot;+
					&quot;Installation instructions available in residing in Documentation folder.&lt;/br&gt;&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Tool Config Utility&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;Tool configuration utility can be found at  \\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V${shortversion}\\Tool\\ArcherSWInsKIT_${params.Version}\\ToolConfiguration &lt;/br&gt;&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Phoenix&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;${phoenixversion}&lt;/br&gt;&quot;+
					&quot;Phoenix installation can be found in \\\\klasj\\ktfiles\\Regions\\Israel\\Eng\\Download\\uArcher_V${shortversion}\\Tool\\ArcherSWInsKIT_${params.Version}\\Phoenix&lt;/br&gt;&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Latest master images are:&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;${masterimage}&quot;+
					&quot;&lt;/br&gt;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Publish on Web:&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;${publishweb}&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Customer:&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;${customer}&quot;+
					&quot;&lt;/br&gt;&quot;+
					&quot;&lt;strong&gt;&lt;u&gt;Third Party Version:&lt;/u&gt;&lt;/strong&gt;&lt;/br&gt;&quot;+
					&quot;${thirdpartyversion}&quot;
					
		        }
		        emailext (to: &quot;Agnes.Zhang@KLA-tencor.com&quot;,
                subject: &quot;Archer SWV ${shortversion} (${params.Version}) is released for ${tooltype} --- for your reivew only&quot;,
                body: &quot;${mailcontent}&quot;);
		    }
        }
	     
	    stage (&apos;Send review&apos;) {
	        steps {
                echo &quot;Draft has been sent out for review&quot;
                echo &quot;${mailcontent}&quot;
            }
		    input {
                message &quot;Is the mail content fine?&quot;
                ok &quot;Yes, we can release it&quot;
            }
            
        }
        
        stage (&apos;Exculde files&apos;){
             steps {
				script{
					excludetext=&quot;\n#Added by Auto-Release script\n&quot;+&quot;UOMD_&quot;+Version+&quot;.*\n&quot;+&quot;Archer_Installation_&quot;+Version+&quot;.*\n&quot;+&quot;RDM_&quot;+Version+&quot;.*\n&quot;+&quot;TDD_&quot;+Version+&quot;.*\n&quot;
					new File(&quot;\\\\isr1appcc02\\SCM\\OMD\\Jenkins_CleanupConfigurations\\AgnesTest.txt&quot;).append(excludetext)
				}
                
				
            }
        }
        stage (&apos;Send Mail&apos;) {
            steps (&apos;SendMail&apos;) {
		        emailext (to: &quot;${mailgroup}&quot;,
                subject: &quot;Archer SWV ${shortversion} (${params.Version}) is released for ${tooltype}&quot;,
                body: &quot;${mailcontent}&quot;);
		    }
        }
	}
}

def exitwitherror(msg){
    input(message:msg ,ok:&apos;Abort&apos;)
    throw new Exception(msg)
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>