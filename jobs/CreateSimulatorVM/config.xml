<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@2.0.1">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>VMsMasterServer</name>
          <description></description>
          <allowedSlaves>
            <string>Validation-7050</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>Validation-7050</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BaseMachineName</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TargetMachineName</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>CloneType</name>
          <description>&lt;B&gt;linked&lt;/B&gt;: A linked clone is a copy of a virtual machine that shares virtual disks with the parent virtual machine in an ongoing manner. Ongoing changes to the virtual disk of the parent do not affect the linked clone, and changes to the disk of the linked clone do not affect the parent. &lt;BR&gt;
&lt;B&gt;full&lt;/B&gt;: A full clone is a complete and independent copy of a virtual machine. It shares nothing with the parent virtual machine after the cloning operation. Ongoing operation of a full clone is entirely separate from the parent virtual machine.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>linked</string>
              <string>full</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SnapshotName</name>
          <description>Source machine snapshot &lt;BR&gt;
In case of empty value, machine will be created from last source machine start</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MacAddress</name>
          <description>In case of empty machine will get the MAC address as source &lt;BR&gt;
MAC Address pattern: 00:50:56:xx:xx:xx</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.5"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>::@ECHO off&#xd;
echo ---------------------------------------&#xd;
echo        Shudown source VM &#xd;
echo ---------------------------------------&#xd;
cd &quot;C:\Program Files (x86)\VMware\VMware Workstation&quot;&#xd;
&quot;vmrun.exe&quot; -T ws stop &quot;E:\Virtual Machines\%BaseMachineName%\%BaseMachineName%.vmx&quot; soft&#xd;
::IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Clonning VM &#xd;
echo ---------------------------------------&#xd;
&quot;vmrun.exe&quot; -T ws clone &quot;E:\Virtual Machines\%BaseMachineName%\%BaseMachineName%.vmx&quot; &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot; %CloneType% %SnapshotName% -cloneName=&quot;%TargetMachineName%&quot;&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Starting cloned VM &#xd;
echo ---------------------------------------&#xd;
&quot;vmrun.exe&quot; -T ws start &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot;&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Sleep waiting machine to get up &#xd;
echo ---------------------------------------&#xd;
PING localhost -n 100 &gt;NUL&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Setting Machine/Computer name&#xd;
echo ---------------------------------------&#xd;
echo %TargetMachineName%&gt; &quot;E:\Virtual Machines\%TargetMachineName%\COMPUTERNAME.txt&quot;&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&quot;vmrun.exe&quot;  -T ws -gu autologonuser -gp Columbia03 copyFileFromHostToGuest &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot; &quot;E:\Virtual Machines\%TargetMachineName%\COMPUTERNAME.txt&quot; &quot;C:\COMPUTERNAME.txt&quot;&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Restarting cloned VM &#xd;
echo ---------------------------------------&#xd;
&quot;vmrun.exe&quot; -T ws stop &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot; soft&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
&#xd;
echo ---------------------------------------&#xd;
echo        Sleep .... zzzzzzz..zzzz&#xd;
echo ---------------------------------------&#xd;
PING localhost -n 30 &gt;NUL&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR  &#xd;
&#xd;
If &quot;%MACAddress%&quot; == &quot;&quot; GOTO Startup&#xd;
echo -----------------------------------------------&#xd;
echo        Configure Machine MAC Address&#xd;
echo -----------------------------------------------&#xd;
::Remove MAC Address proprties&#xd;
%windir%\System32\WindowsPowerShell\v1.0\powershell.exe -command &quot;Get-Content &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&apos; | Where-Object {$_ -notmatch &apos;ethernet0.addressType&apos;} | Set-Content &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx.edit&apos;&quot;&#xd;
%windir%\System32\WindowsPowerShell\v1.0\powershell.exe -command &quot;Get-Content &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&apos; | Where-Object {$_ -notmatch &apos;ethernet0.address&apos;} | Set-Content &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx.edit&apos;&quot;&#xd;
&#xd;
:: Set new MAC Address&#xd;
%windir%\System32\WindowsPowerShell\v1.0\powershell.exe -command &quot;add-content -path &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx.edit&apos; -value `r`nethernet0.addressType=static&quot;&#xd;
&#xd;
%windir%\System32\WindowsPowerShell\v1.0\powershell.exe -command &quot;add-content -path &apos;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx.edit&apos; -value `r`nethernet0.address=%MACAddress%&quot;&#xd;
&#xd;
deL &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot;&#xd;
ren &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx.edit&quot; %TargetMachineName%.vmx&#xd;
&#xd;
:Startup&#xd;
echo -----------------------------------------------&#xd;
echo        Start Machine and Connect to Jenkins&#xd;
echo -----------------------------------------------&#xd;
&quot;vmrun.exe&quot; -T ws start &quot;E:\Virtual Machines\%TargetMachineName%\%TargetMachineName%.vmx&quot; nogui&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; EQU &quot;0&quot; GOTO ERROR &#xd;
GOTO END&#xd;
&#xd;
:ERROR&#xd;
ECHO SORRY WE HAD FAILED&#xd;
&#xd;
:END&#xd;
ECHO Good job Adham, we are ok&#xd;
</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.10"/>
  </buildWrappers>
</project>