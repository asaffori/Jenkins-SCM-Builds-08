<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.23">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@2.0.1">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
    <script>import hudson.security.SecurityRealm;
import com.cwctravel.hudson.plugins.extended_choice_parameter.ExtendedChoiceParameterDefinition
import groovy.io.FileType
pipeline {
    agent { node { label &apos;master&apos; } }
    stages {
        stage(&apos;build&apos;) {
            steps {

                script {
                    def user_team
                    wrap([$class: &apos;BuildUser&apos;]) {

                    try{
                    
                       user_team = ((String[])Jenkins.instance.securityRealm.loadUserByUsername(BUILD_USER_ID).getAuthorities()).contains(&quot;DL-OMD-ENG-SCM&quot;) ? &quot;DevOps&quot;: &quot;Dev&quot;
                    
                    }catch (Exception e){
                        print (&quot;Failed while retreaving groups for user &quot;+ BUILD_USER_ID)
                        throw (e)
                    }

                    try{
                        def user_workspaces = []
                        user_workspaces = getUserRTCWorkspaces()
                        workspaces_choice_list=user_workspaces.join(&apos;\n&apos;)
                        //workspaces_choice_list=&apos;Archer_17.00_Integ Workspace\nArcher_17.13.02_Dev Workspace\nasaffori_Archer_16.07_Integ\nasaffori_Archer_16.12_Dev_Workspace\nasaffori_Archer_17.00_Dev\nasaffori_Archer_17.00_Integ\nasaffori_Archer_17.01_Dev\nasaffori_Archer_17.01_Integ\nasaffori_Archer_17.01_Support_17.01.00.21100_new\nasaffori_Archer_17.02_Dev_Tasks\nasaffori_Archer_17.02_Integ\nasaffori_Archer_17.02_Test\nasaffori_Archer_17.03_Dev_New2\nasaffori_Archer_17.03_Integ\nasaffori_Archer_17.03_Task_Static_Code_Analysis_384128\nasaffori_Archer_17.04_Dev\nasaffori_Archer_17.10_Dev\nasaffori_Archer_17.11_Dev\nasaffori_Archer_17.11_Integ\nasaffori_Archer_17.12_Dev_Workspace\nasaffori_Archer_17.12_Dev_Workspace_New\nasaffori_Archer_17.12_Task_Build_improve_417558\nasaffori_Archer_17.12_Task_Pre_17.12.01_Workspace\nasaffori_Archer_17.13.01_Dev_Workspace\nasaffori_Archer_17.13.02_Dev_Workspace\nasaffori_Archer_17.13.03_Dev_Workspace\nasaffori_Archer_17.13_Dev_Workspace\nasaffori_Archer_17.14_Dev_Workspace\nasaffori_RDM-MainOS_1.0_Integ&apos;
                        print (workspaces_choice_list)
                    }catch (Exception e){
                        throw (e)
                    }

                        DevOpsBuildTypes = &apos;Scheduled\nFormal\nTasks&apos;
                        DevBuildTypes = &apos;Tasks\nFormal&apos;
                        FormalVersion_choice_list = getFormalVersionsList().join(&apos;\n&apos;)
                        print (FormalVersion_choice_list)
                        print (&quot;**\n&quot;+getFormalVersionsList()+&quot;**\n&quot;)
                    
             

                    /**[$class: &apos;ChoiceParameterDefinition&apos;, choices: &apos;Debug &amp; Release\nRelease\nDebug&apos;, description: &apos;In which modes ?&apos;, name: &apos;BUILDMODES&apos;],
                    [$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, description: &apos;Build RDM?&apos;, name: &apos;RunRDM&apos;],
                    [$class: &apos;ChoiceParameterDefinition&apos;, choices: &apos;Basic\nAdvanced\nDiagnostic\nCustom&apos;, description: &apos;Which build style would you like to run? \n\tBasic: Compilation only \n\tAdvanced: Compilation, Installers \n\tDiagnostic:Commpilation, Installers, SCA, Sanity, Nunit\n\tCustom: Run customized build steps &apos;, name: &apos;BuildStyle&apos;],
**/
              
                                        
                   def Dev_Formal_Build_Params =[[$class: &apos;ChoiceParameterDefinition&apos;, choices: user_team == &apos;DevOps&apos;? DevOpsBuildTypes:DevBuildTypes , description: &apos;Which build type you would like to run ?&apos;, name: &apos;BUILDTYPE&apos;]]
                   
                   def DevOps_Formal_Build_Params =[
                       [$class: &apos;ChoiceParameterDefinition&apos;, choices: user_team == &apos;DevOps&apos;? DevOpsBuildTypes:DevBuildTypes , description: &apos;Which build type you would like to run ?&apos;, name: &apos;BUILDTYPE&apos;],
                    [$class: &apos;ChoiceParameterDefinition&apos;, choices: FormalVersion_choice_list , description: &apos;Which version you would like to run the build for ?&apos;, name: &apos;MajorMinor&apos;],
                    //[$class: &apos;StringParameterDefinition&apos;, defaultValue:&apos;Version will be automatically calulated&apos;, description: &apos;What should be your build version?&apos;, name: &apos;Build_Version&apos;],
                    //[$class: &apos;ChoiceParameterDefinition&apos;, choices: workspaces_choice_list, description: &apos;What is your build WorkSpace? \nExample: asaffori_Archer_17.12_Dev_Workspace&apos;, name: &apos;WorkSpaceName&apos;]
                    [$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, name: &apos;RunAsOmdbuild&apos;]]
                    /**,
                    [$class: &apos;DropdownAutocompleteParameterDefinition&apos;,
                        name: &apos;Workspace&apos;,
                        description:&apos;What is your build WorkSpace?&apos;,
                        defaultValue:&apos;&apos;,
                        dataProvider: 
                        [
                            $class: &apos;SimpleTextProvider&apos;, 
                            autoCompleteData: workspaces_choice_list
                        ],
                        displayExpression: &apos;&apos;,
                        valueExpression: &apos;&apos;
                    ]**/
                    
                    //[$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, description: &apos;Would you like to run automatic Archer sanity tests for this build ?&apos;, name: &apos;RunATE&apos;],
                    //[$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, description: &apos;Would you like to generate installers for this build ?&apos;, name: &apos;BuidInstallers&apos;]]
                    
                def userInput = input(
                    id: &apos;userInput&apos;, message: &apos;Hello &apos;+BUILD_USER+&apos;\n Identified as &apos;+user_team+ &apos; user&apos;, parameters: user_team == &apos;DevOps&apos;? DevOps_Formal_Build_Params:Dev_Formal_Build_Params,ok:&apos;Lets continue&apos;
                    )

                   String defaultScheduledBuildVersion= new File(&quot;\\\\isr1appcc02\\scm\\OMD\\Jenkins_Build_Version\\&quot;+userInput.MajorMinor+&quot;version.txt&quot;).readLines().get(1).split(&apos;=&apos;)[1]
                   print defaultScheduledBuildVersion
                   String[] tmpNumArray=((String)defaultScheduledBuildVersion).tokenize(&quot;.&quot;)
                   print (&quot;**** &quot; + tmpNumArray[3] &quot; *****&quot;)
                   int num = tmpNumArray[3] as Integer
                   tmpNumArray[3] = ((int)num/100) +1 *100 as String 
                   defaultFormalBuildVersion= tmpNumArray.join(&apos;.&apos;)
                   
                   def advancedUserInput = input(
                    id: &apos;userInput&apos;, message: &apos;Build options&apos;, parameters: [
                        [$class: &apos;ChoiceParameterDefinition&apos;, choices:&apos;Full build (combination of all below steps)\n\tCompilation (Build/Nunit)\n\tMedia\n\tSanity\nI want to custom my build steps&apos; , description: &apos;Which build level would you like to run? &apos;, name: &apos;MajorMinor&apos;],
                        [$class: &apos;BooleanParameterDefinition&apos;, name: &apos;Archer&apos;, defaultValue: true, description: &apos;Which product would you like to build?&apos;],
                        [$class: &apos;BooleanParameterDefinition&apos;, name: &apos;RDM&apos;, defaultValue: true],
                        [$class: &apos;BooleanParameterDefinition&apos;, name: &apos;Debug&apos;, defaultValue: true, description: &apos;Which build modes would you like to run?&apos;],
                        [$class: &apos;BooleanParameterDefinition&apos;, name: &apos;Release&apos;, defaultValue: userInput.BUILDTYPE == &apos;Task&apos;? false:true],
                        [$class: &apos;StringParameterDefinition&apos;, name: &apos;Build_Version&apos;, defaultValue: userInput.BUILDTYPE  == &apos;Formal&apos; ? defaultFormalBuildVersion:defaultScheduledBuildVersion, description: &apos;Which version would you like to tag your build with?&apos;],
                        [$class: &apos;ChoiceParameterDefinition&apos;, choices: workspaces_choice_list, description: &apos;Which RTC workspace you would like to run your build with?&apos;, name: &apos;WorkSpaceName&apos;]
                    ]
                    )

                    }
                }
                
            }
        }
    }
    
}  
 
 def getUserRTCWorkspaces(){
    wrap([$class: &apos;BuildUser&apos;]) {
        cmd=&quot;scm  list workspaces -r http://clm.kla-tencor.com/ccm -u omdbuild -P Scm07^&amp; -c ${BUILD_USER_ID} -m 100&quot;
        try{
            stdoutput = bat(returnStdout:true , script:cmd).trim()
        }catch(Exception e){
            throw e
        }
       // print (&quot;stdout=&quot; + stdoutput)
        def workspaces = []
        stdoutput.readLines().each {
            if (it.contains(BUILD_USER)){
                workspaces &lt;&lt; it.substring(it.indexOf(&apos;\&quot;&apos;)+1,it.lastIndexOf(&apos;\&quot;&apos;))
            }
        }

        return workspaces
    }
}

def getFormalVersionsList(){
    def versionsList = []
    File[] files = new File(&quot;\\\\isr1appcc02\\scm\\OMD\\Jenkins_Build_Version&quot;).listFiles();
    for (File file : files) {
      if (!file.getName().endsWith(&quot;version.txt&quot;)) continue
      version= file.getName().substring(0,file.getName().indexOf(&apos;version&apos;))
      versionsList &lt;&lt; (version.lastIndexOf(&apos;_&apos;) == (version.length()-1) ? version[0..(version.length()-2)]:version)
    }
    return versionsList
}

    </script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>